Context-Free Grammar that dictates order of syntax in Regal

    - At least one whitespace character must separate certain tokens.
        - Tokens that use special symbols (e.g. '+' or '**' or '=') do not need
          whitespace separating them from other tokens.
    - Non-terminals are capitalized.
    - Terminals are surrounded in single quotes. (e.g. 'example')
    - Undefined terminals are surrounded in single-quote carrots. (e.g. '<example>')
    - The '|' symbol represents OR.


Line -> KeywordStatement

KeywordStatement -> LetStatement | NowStatement

LetStatement -> 'let' '<var>' '=' Expression
    <var> is a custom variable name

NowStatement -> 'now' '<var>' '=' Expression
    <var> is a custom variable name

Expression -> KeywordStatement | BaseExpr | NothingExpr

BaseExpr -> MathExpr

NothingExpr -> 'nothing'

MathExpr -> AdditiveExpr

AdditiveExpr -> MultiplicativeExpr '<add_op>' AdditiveExpr | MultiplicativeExpr
    <add_op> is any of the additive subset of the primitive operators.

MultiplicativeExpr -> ExponentialExpr '<mult_op>' MultiplicativeExpr | ExponentialExpr
    <mult_op> is any of the multiplicative subset of the primitive operators.

ExponentialExpr -> PrimitiveExpr '**' ExponentialExpr | PrimitiveExpr

PrimitiveExpr -> NumberExpr | VariableExpr | '('Expression')'

NumberExpr -> '<integer>'
    <integer> is any integer

VariableExpr -> '<var>'
    <var> is a custom variable name